<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.weet.app.classes.mapper.ClassMapper">

	<select id="selectDetail" resultType="com.weet.app.classes.domain.ClassDetailVO">
		SELECT
		    class_id,
		    user_id,
		    (
		    	SELECT
		    		user_name
		    	FROM
		    		t_user
		    	WHERE
		    		t_user.user_id = t_class.user_id
		    ),
		    class_type,
		    class_title,
		    class_trainer_name,
		    class_main_img_url,
		    class_intro,
		    class_video_url,
		    class_recruit_start_date,
		    class_recruit_end_date,
		    class_recruit_max_num,
		    class_fee,
		    class_tag1,
		    class_tag2,
		    class_tag3,
		    class_photo_url,
		    class_avg_star,
		    class_running_time,
		    class_count,
		    class_aderess,
		    class_heart_cnt,
		    
		    (
		    	SELECT
		    		count(user_id) AS current_reg_cnt
		    	FROM
		    		t_class_listener
		    	WHERE
		    		class_id = #{classId}
		    )
		FROM
		    t_class
		WHERE
		    class_id = #{classId}
	</select>
	
	<select 
		id="selectReviews" 
		resultType="com.weet.app.classes.domain.ReviewVO">
		
		SELECT
		    user_nickname,
		    review_contents,
		    to_char(review_datetime, 'yyyy.mm.dd'),
		    review_star,
		    review_img_url
		FROM
		    t_review r,
		    t_user u
		WHERE
		    r.user_id = u.user_id
		    AND r.class_id = #{classId}
		<include refid="reviewSort"/>
		OFFSET
		    (#{cri.currPage} - 1) * #{cri.amount} ROW
		FETCH
		    NEXT #{cri.amount} ROWS ONLY
	</select>
	
	<sql id="reviewSort">
		<if test="cri.sort == 'undefined'">
			ORDER BY review_id DESC
		</if>
		<if test="cri.sort == 'recent'">
			ORDER BY review_id DESC
		</if>
		<if test="cri.sort == 'starDESC'">
			ORDER BY review_star DESC
		</if>
		<if test="cri.sort == 'starASC'">
			ORDER BY review_star ASC
		</if>
	</sql>
	
	<select id="selectTotalReviewInfo" resultType="com.weet.app.classes.domain.TotalReviewVO">
		SELECT
		    count(review_id) AS total_review,
		    round(avg(review_star), 1) AS avg_star,
		    count(CASE WHEN review_star = 1 THEN 1 END) AS star1,
		    count(CASE WHEN review_star = 2 THEN 1 END) AS star2,
		    count(CASE WHEN review_star = 3 THEN 1 END) AS star3,
		    count(CASE WHEN review_star = 4 THEN 1 END) AS star4,
		    count(CASE WHEN review_star = 5 THEN 1 END) AS star5
		FROM
		    t_review
		WHERE
		    class_id = #{classId}
	</select>
    
    <insert id="insertMyLike">
    	INSERT INTO t_like_class
    	(
    		user_id,
    		class_id
    	)
    	VALUES
    	(
    		#{userId},
    		#{classId}
    	)
    </insert>
    
    <delete id="deleteMyLike">
    	DELETE FROM t_like_class
    	WHERE
    		class_id = #{classId}
    		AND user_id = #{userId}
    </delete>
    
    
    <!-- ============================================================================== -->
    <!-- 메인페이지: 추천 클래스 -->
   	<select id="selectClassRecommend" resultType="com.weet.app.classes.domain.ClassVO">
		SELECT 
		    *
		FROM
		    t_class
		ORDER BY class_avg_star DESC
		FETCH NEXT 3 ROWS ONLY
    </select>
    
    <!-- 메인페이지: 마감임박 클래스 -->
    <select id="selectClassEnd" resultType="com.weet.app.classes.domain.ClassVO">
		SELECT 
	        *
	    FROM
	        t_class
	    ORDER BY class_recruit_end_date ASC
	    FETCH NEXT 3 ROWS ONLY
    </select>
    
  	<!-- 메인페이지: 신규 클래스 -->
  	<select id="selectClassNew" resultType="com.weet.app.classes.domain.ClassVO">
		SELECT 
        	*
		FROM
   			t_class
		ORDER BY class_recruit_start_date DESC
		FETCH NEXT 3 ROWS ONLY
    </select>
    
    <!-- =================================================================================== -->
  	
  	<!-- 메인페이지: 신규 클래스 더보기 -->
  	<select id="selectClassNewAll" resultType="com.weet.app.classes.domain.ClassVO">
		SELECT 
        	*
		FROM
   			t_class
		ORDER BY class_recruit_start_date DESC
    </select>
    
    
    <!-- 메인페이지: 추천 클래스 더보기 -->
   	<select id="selectClassRecommendAll" resultType="com.weet.app.classes.domain.ClassVO">
		SELECT 
		    *
		FROM
		    t_class
		ORDER BY class_avg_star DESC
    </select>
    
    <!-- 메인페이지: 마감임박 클래스 더보기 -->
    <select id="selectClassEndAll" resultType="com.weet.app.classes.domain.ClassVO">
		SELECT 
	        *
	    FROM
	        t_class
	    ORDER BY class_recruit_end_date ASC
    </select>
  	
    
    <!-- =================================================================================== -->
    
    <!-- 클래스 검색 페이지: 모든 클래스 -->
  	<select id="selectAllClass" resultType="com.weet.app.classes.domain.ClassVO" 
  	parameterType="com.weet.app.classes.domain.Criteria2">
		SELECT 
        	*
		FROM
   			t_class
   		ORDER BY class_recruit_start_date DESC
    </select> 
    
	    
    <!-- 클래스 검색 페이지: 페이징 -->
    <select id="selectClassPaging" resultType="com.weet.app.classes.domain.ClassVO">

		SELECT 
		    /*+ index_desc(t_class)*/	*
		FROM
		    t_class
		<if test="type == 'personalandgroup'">
		<!-- WHERE class_type = '1' OR class_type = '2' -->
		<!-- 구문오류로 수정 -->
		where class_fee LIKE '%'||0||'%'
		</if>
		<if test="type == 'personal'">
		WHERE class_type = '1'
		</if>
		<if test="type == 'group'">
		WHERE class_type = '2'
		</if>
		<if test="keyword != null">
			AND (class_title LIKE '%' || #{keyword} || '%'
			OR class_trainer_name LIKE '%' || #{keyword} || '%'
			OR class_intro LIKE '%' ||#{keyword}||'%'
			OR class_trainer_name LIKE '%' ||#{keyword}||'%'
			OR class_tag1 LIKE '%' ||#{keyword}||'%'
			OR class_tag2 LIKE '%' ||#{keyword}||'%'
			OR class_tag3 LIKE '%' ||#{keyword}||'%')
		</if>
		<include refid="classSort" />
		OFFSET (#{pageNum} - 1) * #{amount} ROWS
		FETCH NEXT #{amount} ROWS ONLY
    </select>
    
    <select id="getTotal" resultType="int">
		SELECT 
		    COUNT(*)
		FROM
		    t_class
		<if test="keyword != null">
            where class_title like '%'||#{keyword}||'%'
        </if>
    </select>
    

    <select id="selectByStar" resultType="com.weet.app.classes.domain.ClassVO">
		SELECT 
		    *
		FROM
		    t_class
		ORDER BY class_avg_star DESC
    </select>
    
    <!-- 클래스 검색 페이지 정렬 -->
    <sql id="classSort">
		<if test="classSort == null">
		ORDER BY class_recruit_start_date DESC
		</if>
		<if test="classSort == 'star'">
		ORDER BY class_avg_star DESC
		</if>
		<if test="classSort == 'newest'">
		ORDER BY class_recruit_start_date DESC
		</if>
		<if test="classSort == 'end'">
		ORDER BY class_recruit_end_date ASC
		</if>
	</sql>
    
</mapper>
